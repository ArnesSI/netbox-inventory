name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    name: Build Package
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11
      
      - name: Install dependencies
        run: pip install --upgrade setuptools wheel
      
      - name: Build the package
        run: python setup.py sdist
      
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist/*

  release:
    name: Release Package
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: dist

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y curl jq

      - name: Authenticate with GitHub CLI
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh auth login --with-token <<< "${{ secrets.GITHUB_TOKEN }}"

      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          gh release create $VERSION dist/* --title "NetBox CMDB $VERSION" --notes "Release $VERSION"

      - name: Upload assets to release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          for artifact in dist/*; do
            gh release upload $VERSION "$artifact"
          done