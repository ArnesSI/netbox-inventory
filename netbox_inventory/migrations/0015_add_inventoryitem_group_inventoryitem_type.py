# Generated by Django 5.1.6 on 2025-03-13 07:55

from django.db import migrations, models
from django.db.models.signals import m2m_changed

from netbox_inventory.signals import update_group_assigned_assets


def _disconnect_m2m_signals():
    from netbox_inventory.models import InventoryItemGroup

    m2m_changed.disconnect(
        update_group_assigned_assets, sender=InventoryItemGroup.device_types.through
    )
    m2m_changed.disconnect(
        update_group_assigned_assets, sender=InventoryItemGroup.module_types.through
    )
    m2m_changed.disconnect(
        update_group_assigned_assets, sender=InventoryItemGroup.rack_types.through
    )
    m2m_changed.disconnect(
        update_group_assigned_assets,
        sender=InventoryItemGroup.inventoryitem_types.through,
    )
    m2m_changed.disconnect(
        update_group_assigned_assets,
        sender=InventoryItemGroup.direct_assets.through,
    )


def move_inventoryitem_types_groups(apps, schema_editor):
    # we need o move relation from InventoryItemType side (FK) to
    # InventoryItemGroup side (M2M)
    # We need to get existing data using old DB schema, but set data to
    # new schema.
    InventoryItemTypeOld = apps.get_model('netbox_inventory', 'InventoryItemType')
    from netbox_inventory.models import InventoryItemGroup, InventoryItemType

    _disconnect_m2m_signals()

    for inventoryitem_type_old in InventoryItemTypeOld.objects.all():
        inventoryitem_type = InventoryItemType.objects.get(pk=inventoryitem_type_old.pk)
        if inventoryitem_type_old.inventoryitem_group:
            inventoryitem_group = InventoryItemGroup.objects.get(
                pk=inventoryitem_type_old.inventoryitem_group.pk
            )
            inventoryitem_group.inventoryitem_types.add(inventoryitem_type)


def add_inventoryitem_groups_assets(apps, schema_editor):
    # we need to get all assets related to inventoryitem_types and add them
    # to group.assets
    from netbox_inventory.models import InventoryItemGroup

    _disconnect_m2m_signals()

    for inventoryitem_group in InventoryItemGroup.objects.all():
        for inventoryitem_type in inventoryitem_group.inventoryitem_types.all():
            inventoryitem_group.assets.add(*inventoryitem_type.assets.all())


class Migration(migrations.Migration):
    dependencies = [
        ('netbox_inventory', '0014_alter_asset_inventoryitem_type'),
    ]

    operations = [
        migrations.AddField(
            model_name='inventoryitemgroup',
            name='inventoryitem_types',
            field=models.ManyToManyField(
                blank=True,
                related_name='inventoryitem_groups',
                to='netbox_inventory.inventoryitemtype',
            ),
        ),
        migrations.AddField(
            model_name='inventoryitemgroup',
            name='assets',
            field=models.ManyToManyField(
                blank=True,
                related_name='inventoryitem_groups',
                to='netbox_inventory.asset',
            ),
        ),
        migrations.AddField(
            model_name='inventoryitemgroup',
            name='device_types',
            field=models.ManyToManyField(
                blank=True, related_name='inventoryitem_groups', to='dcim.devicetype'
            ),
        ),
        migrations.AddField(
            model_name='inventoryitemgroup',
            name='direct_assets',
            field=models.ManyToManyField(
                blank=True, related_name='direct', to='netbox_inventory.asset'
            ),
        ),
        migrations.AddField(
            model_name='inventoryitemgroup',
            name='module_types',
            field=models.ManyToManyField(
                blank=True, related_name='inventoryitem_groups', to='dcim.moduletype'
            ),
        ),
        migrations.AddField(
            model_name='inventoryitemgroup',
            name='rack_types',
            field=models.ManyToManyField(
                blank=True, related_name='inventoryitem_groups', to='dcim.racktype'
            ),
        ),
        migrations.RunPython(
            move_inventoryitem_types_groups, migrations.RunPython.noop
        ),
        migrations.RunPython(
            add_inventoryitem_groups_assets, migrations.RunPython.noop
        ),
        migrations.RemoveField(
            model_name='inventoryitemtype',
            name='inventoryitem_group',
        ),
    ]
