# Generated by Django 4.2.6 on 2023-11-02 20:21

from django.db import migrations, models
import django.db.models.deletion
import taggit.managers
import utilities.json


class Migration(migrations.Migration):

    dependencies = [
        ('extras', '0098_webhook_custom_field_data_webhook_tags'),
        ('dcim', '0181_rename_device_role_device_role'),
        ('netbox_inventory', '0005_delivery_asset_delivery'),
    ]

    operations = [
        migrations.CreateModel(
            name='ConsumableType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('custom_field_data', models.JSONField(blank=True, default=dict, encoder=utilities.json.CustomFieldJSONEncoder)),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(max_length=100, unique=True)),
                ('description', models.CharField(blank=True, max_length=200)),
                ('part_number', models.CharField(blank=True, max_length=50)),
                ('comments', models.TextField(blank=True)),
                ('manufacturer', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, related_name='consumable_type', to='dcim.manufacturer')),
                ('tags', taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag')),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Consumable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('custom_field_data', models.JSONField(blank=True, default=dict, encoder=utilities.json.CustomFieldJSONEncoder)),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('alert_at_quantity', models.PositiveIntegerField(default=0)),
                ('comments', models.TextField(blank=True)),
                ('consumable_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='consumable', to='netbox_inventory.consumabletype')),
                ('storage_location', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='consumable', to='dcim.location')),
                ('tags', taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag')),
            ],
            options={
                'ordering': ('consumable_type', 'storage_location'),
                'unique_together': {('consumable_type', 'storage_location')},
            },
        ),
    ]
